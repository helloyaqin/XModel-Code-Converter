/*
 * generated by Xtext 2.18.0.M3
 */
grammar InternalXModel;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.xmodel.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.xmodel.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.xmodel.services.XModelGrammarAccess;

}

@parser::members {

 	private XModelGrammarAccess grammarAccess;

    public InternalXModelParser(TokenStream input, XModelGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Package";
   	}

   	@Override
   	protected XModelGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRulePackage
entryRulePackage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPackageRule()); }
	iv_rulePackage=rulePackage
	{ $current=$iv_rulePackage.current; }
	EOF;

// Rule Package
rulePackage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPackageAccess().getPackageAction_0(),
					$current);
			}
		)
		otherlv_1='Package'
		{
			newLeafNode(otherlv_1, grammarAccess.getPackageAccess().getPackageKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPackageAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPackageRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.example.xmodel.XModel.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getPackageAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='class'
			{
				newLeafNode(otherlv_4, grammarAccess.getPackageAccess().getClassKeyword_4_0());
			}
			otherlv_5='{'
			{
				newLeafNode(otherlv_5, grammarAccess.getPackageAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPackageAccess().getClassXClassParserRuleCall_4_2_0());
					}
					lv_class_6_0=ruleXClass
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPackageRule());
						}
						add(
							$current,
							"class",
							lv_class_6_0,
							"org.xtext.example.xmodel.XModel.XClass");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getPackageAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPackageAccess().getClassXClassParserRuleCall_4_3_1_0());
						}
						lv_class_8_0=ruleXClass
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPackageRule());
							}
							add(
								$current,
								"class",
								lv_class_8_0,
								"org.xtext.example.xmodel.XModel.XClass");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_9='}'
			{
				newLeafNode(otherlv_9, grammarAccess.getPackageAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getPackageAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleXClass
entryRuleXClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXClassRule()); }
	iv_ruleXClass=ruleXClass
	{ $current=$iv_ruleXClass.current; }
	EOF;

// Rule XClass
ruleXClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXClassAccess().getXClassAction_0(),
					$current);
			}
		)
		(
			(
				lv_isAbstract_1_0='isAbstract'
				{
					newLeafNode(lv_isAbstract_1_0, grammarAccess.getXClassAccess().getIsAbstractIsAbstractKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXClassRule());
					}
					setWithLastConsumed($current, "isAbstract", true, "isAbstract");
				}
			)
		)?
		otherlv_2='XClass'
		{
			newLeafNode(otherlv_2, grammarAccess.getXClassAccess().getXClassKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getXClassAccess().getNameEStringParserRuleCall_3_0());
				}
				lv_name_3_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXClassRule());
					}
					set(
						$current,
						"name",
						lv_name_3_0,
						"org.xtext.example.xmodel.XModel.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getXClassAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			otherlv_5='description'
			{
				newLeafNode(otherlv_5, grammarAccess.getXClassAccess().getDescriptionKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getXClassAccess().getDescriptionEStringParserRuleCall_5_1_0());
					}
					lv_description_6_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXClassRule());
						}
						set(
							$current,
							"description",
							lv_description_6_0,
							"org.xtext.example.xmodel.XModel.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_7='extend'
			{
				newLeafNode(otherlv_7, grammarAccess.getXClassAccess().getExtendKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getXClassAccess().getExtendEStringParserRuleCall_6_1_0());
					}
					lv_extend_8_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXClassRule());
						}
						set(
							$current,
							"extend",
							lv_extend_8_0,
							"org.xtext.example.xmodel.XModel.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_9='property'
			{
				newLeafNode(otherlv_9, grammarAccess.getXClassAccess().getPropertyKeyword_7_0());
			}
			otherlv_10='{'
			{
				newLeafNode(otherlv_10, grammarAccess.getXClassAccess().getLeftCurlyBracketKeyword_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getXClassAccess().getPropertyPropertyParserRuleCall_7_2_0());
					}
					lv_property_11_0=ruleProperty
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXClassRule());
						}
						add(
							$current,
							"property",
							lv_property_11_0,
							"org.xtext.example.xmodel.XModel.Property");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_12=','
				{
					newLeafNode(otherlv_12, grammarAccess.getXClassAccess().getCommaKeyword_7_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getXClassAccess().getPropertyPropertyParserRuleCall_7_3_1_0());
						}
						lv_property_13_0=ruleProperty
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXClassRule());
							}
							add(
								$current,
								"property",
								lv_property_13_0,
								"org.xtext.example.xmodel.XModel.Property");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_14='}'
			{
				newLeafNode(otherlv_14, grammarAccess.getXClassAccess().getRightCurlyBracketKeyword_7_4());
			}
		)?
		(
			otherlv_15='operation'
			{
				newLeafNode(otherlv_15, grammarAccess.getXClassAccess().getOperationKeyword_8_0());
			}
			otherlv_16='{'
			{
				newLeafNode(otherlv_16, grammarAccess.getXClassAccess().getLeftCurlyBracketKeyword_8_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getXClassAccess().getOperationOperationParserRuleCall_8_2_0());
					}
					lv_operation_17_0=ruleOperation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXClassRule());
						}
						add(
							$current,
							"operation",
							lv_operation_17_0,
							"org.xtext.example.xmodel.XModel.Operation");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_18=','
				{
					newLeafNode(otherlv_18, grammarAccess.getXClassAccess().getCommaKeyword_8_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getXClassAccess().getOperationOperationParserRuleCall_8_3_1_0());
						}
						lv_operation_19_0=ruleOperation
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXClassRule());
							}
							add(
								$current,
								"operation",
								lv_operation_19_0,
								"org.xtext.example.xmodel.XModel.Operation");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_20='}'
			{
				newLeafNode(otherlv_20, grammarAccess.getXClassAccess().getRightCurlyBracketKeyword_8_4());
			}
		)?
		otherlv_21='}'
		{
			newLeafNode(otherlv_21, grammarAccess.getXClassAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleProperty
entryRuleProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropertyRule()); }
	iv_ruleProperty=ruleProperty
	{ $current=$iv_ruleProperty.current; }
	EOF;

// Rule Property
ruleProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPropertyAccess().getPropertyAction_0(),
					$current);
			}
		)
		otherlv_1='Property'
		{
			newLeafNode(otherlv_1, grammarAccess.getPropertyAccess().getPropertyKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPropertyAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPropertyRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.example.xmodel.XModel.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getPropertyAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='description'
			{
				newLeafNode(otherlv_4, grammarAccess.getPropertyAccess().getDescriptionKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPropertyAccess().getDescriptionEStringParserRuleCall_4_1_0());
					}
					lv_description_5_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPropertyRule());
						}
						set(
							$current,
							"description",
							lv_description_5_0,
							"org.xtext.example.xmodel.XModel.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6='visibility'
			{
				newLeafNode(otherlv_6, grammarAccess.getPropertyAccess().getVisibilityKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPropertyAccess().getVisibilityVisibilityEnumRuleCall_5_1_0());
					}
					lv_visibility_7_0=ruleVisibility
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPropertyRule());
						}
						set(
							$current,
							"visibility",
							lv_visibility_7_0,
							"org.xtext.example.xmodel.XModel.Visibility");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_8='xtype'
			{
				newLeafNode(otherlv_8, grammarAccess.getPropertyAccess().getXtypeKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPropertyAccess().getXtypeXTypeEnumRuleCall_6_1_0());
					}
					lv_xtype_9_0=ruleXType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPropertyRule());
						}
						set(
							$current,
							"xtype",
							lv_xtype_9_0,
							"org.xtext.example.xmodel.XModel.XType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getPropertyAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleOperation
entryRuleOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationRule()); }
	iv_ruleOperation=ruleOperation
	{ $current=$iv_ruleOperation.current; }
	EOF;

// Rule Operation
ruleOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getOperationAccess().getOperationAction_0(),
					$current);
			}
		)
		otherlv_1='Operation'
		{
			newLeafNode(otherlv_1, grammarAccess.getOperationAccess().getOperationKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.example.xmodel.XModel.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getOperationAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='description'
			{
				newLeafNode(otherlv_4, grammarAccess.getOperationAccess().getDescriptionKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOperationAccess().getDescriptionEStringParserRuleCall_4_1_0());
					}
					lv_description_5_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperationRule());
						}
						set(
							$current,
							"description",
							lv_description_5_0,
							"org.xtext.example.xmodel.XModel.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6='visibility'
			{
				newLeafNode(otherlv_6, grammarAccess.getOperationAccess().getVisibilityKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOperationAccess().getVisibilityVisibilityEnumRuleCall_5_1_0());
					}
					lv_visibility_7_0=ruleVisibility
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperationRule());
						}
						set(
							$current,
							"visibility",
							lv_visibility_7_0,
							"org.xtext.example.xmodel.XModel.Visibility");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_8='xtype'
			{
				newLeafNode(otherlv_8, grammarAccess.getOperationAccess().getXtypeKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOperationAccess().getXtypeXTypeEnumRuleCall_6_1_0());
					}
					lv_xtype_9_0=ruleXType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperationRule());
						}
						set(
							$current,
							"xtype",
							lv_xtype_9_0,
							"org.xtext.example.xmodel.XModel.XType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_10='parameter'
			{
				newLeafNode(otherlv_10, grammarAccess.getOperationAccess().getParameterKeyword_7_0());
			}
			otherlv_11='{'
			{
				newLeafNode(otherlv_11, grammarAccess.getOperationAccess().getLeftCurlyBracketKeyword_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOperationAccess().getParameterParameterParserRuleCall_7_2_0());
					}
					lv_parameter_12_0=ruleParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperationRule());
						}
						add(
							$current,
							"parameter",
							lv_parameter_12_0,
							"org.xtext.example.xmodel.XModel.Parameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_13=','
				{
					newLeafNode(otherlv_13, grammarAccess.getOperationAccess().getCommaKeyword_7_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getOperationAccess().getParameterParameterParserRuleCall_7_3_1_0());
						}
						lv_parameter_14_0=ruleParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOperationRule());
							}
							add(
								$current,
								"parameter",
								lv_parameter_14_0,
								"org.xtext.example.xmodel.XModel.Parameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_15='}'
			{
				newLeafNode(otherlv_15, grammarAccess.getOperationAccess().getRightCurlyBracketKeyword_7_4());
			}
		)?
		otherlv_16='}'
		{
			newLeafNode(otherlv_16, grammarAccess.getOperationAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	iv_ruleParameter=ruleParameter
	{ $current=$iv_ruleParameter.current; }
	EOF;

// Rule Parameter
ruleParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getParameterAccess().getParameterAction_0(),
					$current);
			}
		)
		otherlv_1='Parameter'
		{
			newLeafNode(otherlv_1, grammarAccess.getParameterAccess().getParameterKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.example.xmodel.XModel.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getParameterAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='xtype'
			{
				newLeafNode(otherlv_4, grammarAccess.getParameterAccess().getXtypeKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getParameterAccess().getXtypeXTypeEnumRuleCall_4_1_0());
					}
					lv_xtype_5_0=ruleXType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParameterRule());
						}
						set(
							$current,
							"xtype",
							lv_xtype_5_0,
							"org.xtext.example.xmodel.XModel.XType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getParameterAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Rule Visibility
ruleVisibility returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='public'
			{
				$current = grammarAccess.getVisibilityAccess().getPublicEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getVisibilityAccess().getPublicEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='protected'
			{
				$current = grammarAccess.getVisibilityAccess().getProtectedEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getVisibilityAccess().getProtectedEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='private'
			{
				$current = grammarAccess.getVisibilityAccess().getPrivateEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getVisibilityAccess().getPrivateEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule XType
ruleXType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='String'
			{
				$current = grammarAccess.getXTypeAccess().getStringEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getXTypeAccess().getStringEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Integer'
			{
				$current = grammarAccess.getXTypeAccess().getIntegerEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getXTypeAccess().getIntegerEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Short'
			{
				$current = grammarAccess.getXTypeAccess().getShortEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getXTypeAccess().getShortEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='Byte'
			{
				$current = grammarAccess.getXTypeAccess().getByteEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getXTypeAccess().getByteEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='Long'
			{
				$current = grammarAccess.getXTypeAccess().getLongEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getXTypeAccess().getLongEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='Float'
			{
				$current = grammarAccess.getXTypeAccess().getFloatEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getXTypeAccess().getFloatEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='Double'
			{
				$current = grammarAccess.getXTypeAccess().getDoubleEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getXTypeAccess().getDoubleEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='Character'
			{
				$current = grammarAccess.getXTypeAccess().getCharacterEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getXTypeAccess().getCharacterEnumLiteralDeclaration_7());
			}
		)
		    |
		(
			enumLiteral_8='Boolean'
			{
				$current = grammarAccess.getXTypeAccess().getBooleanEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_8, grammarAccess.getXTypeAccess().getBooleanEnumLiteralDeclaration_8());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
